name: Terraform

on:
  workflow_run:
    workflows: ['Run pre-commit on push']
    types:
      - completed
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  actions: read # Required to identify workflow run
  checks: write # Required to add status summary
  contents: read # Required to checkout repository
  id-token: write # Required to authenticate via OIDC
  pull-requests: write # Required to add PR comment

env:
  AWS_ACCOUNT_ID: '838419074361'
  AWS_REGION: 'us-east-2'
  TF_VERSION: '1.10.5'
  TF_WORKING_DIR: './terraform'

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'pull_request' || github.event_name == 'issue_comment' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: AWS Authenticate (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-oidc'
          aws-region: '${{ env.AWS_REGION }}'

      - name: Create Terraform plugin cache
        run: |
          mkdir --parents $HOME/.terraform.d/plugin-cache
          echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache" >> $GITHUB_ENV

      - name: Cache Terraform plugins
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: cache-tf-${{ runner.os }}-${{ hashFiles('terraform/.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false # Required for TF-via-PR to get detailed exit codes

      # Security scanning for Terraform
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.TF_WORKING_DIR }}
          framework: terraform
          output_format: sarif
          output_file_path: terraform-checkov.sarif
        continue-on-error: true

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('terraform-checkov.sarif') != ''
        with:
          sarif_file: terraform-checkov.sarif
        continue-on-error: true

      # TFSec security scanning
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ env.TF_WORKING_DIR }}
          soft_fail: true
        continue-on-error: true

      # TF-via-PR: Plan on PR, Apply on push to main
      - name: Terraform Plan & Apply via PR
        uses: op5dev/tf-via-pr@v13
        env:
          NETLIFY_API_TOKEN: ${{ secrets.NETLIFY_API_TOKEN }}
          TF_LOG: ERROR
          TF_IN_AUTOMATION: true
        with:
          working-directory: ${{ env.TF_WORKING_DIR }}
          command: ${{ github.event_name == 'push' && 'apply' || 'plan' }}
          arg-lock: ${{ github.event_name == 'push' }}
          plan-encrypt: ${{ secrets.TF_PLAN_PASSPHRASE }}
          validate: true
          format: true
          expand-diff: true
          comment-pr: always
          retention-days: 7
